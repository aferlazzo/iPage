<?php
require ("../include/authenticate.php");
include ("../include/SetCookies.php");
SetCookies();

/*
 **************************** New info on importing to Point! **************************

calyx
Unregistered User
(5/19/03 3:24 am)
Reply   help with import
--------------------------------------------------------------------------------
 Try this

import.exe "C:\brian\lead.txt" "C:\brian\leads.imp" "C:\PNTDATA\Borrower"

Your file will be saved with autogenerated name in the borrower folder. This worked on my machine.





Edited by: calyxez2 at: 10/10/03 2:49 pm
 
hugolboss
Registered User
Posts: 1
(7/8/03 7:58 am)
Reply   I'm having problems as well 
--------------------------------------------------------------------------------
I was wondering if the last post worked because its not working for me. could you please clarify what is soppose to look like! thanks

 
 calyxez2
Calyx Support EzBoard Administrator
Posts: 66
(9/3/03 10:58 am)
Reply 
ezSupporter
  Re: I'm having problems as well 
--------------------------------------------------------------------------------
In the above example make sure auto file naming for that data folder is enabled within Point. 
Matt Sweeney
Calyx Software Technical Support
1-800-342-2599
www.calyxsoftware.com
www.calyxsupport.com



 
soceanmailcom
Unregistered User
(9/23/03 6:27 pm)
Reply   Import.exe
--------------------------------------------------------------------------------
 Does anyone know if import.exe automatically updates the index file for the folder as well as adding the record? 
 
MTIG
Registered User
Posts: 101
(9/23/03 6:33 pm)
Reply   auto import
--------------------------------------------------------------------------------
 Auto import has worked for me in updating the indexes. When I use auto import I notify the user the file has been updated. I don't know if this makes a difference.

-mikem@mtig.biz 
 
Tanessa
Unregistered User
(9/25/03 1:52 pm)
Reply   Importing data into existing files
--------------------------------------------------------------------------------
 I need to batch import data into existing files and have those files updated. My company does not use the auto file naming option. Does anyone know how to do this? I've tried all suggestions posted here and no luck. 
 
bvoorhees
Registered User
Posts: 13
(9/25/03 8:04 pm)
Reply   Re: Importing data into existing files
--------------------------------------------------------------------------------
 If you are importing data into existing files, you do not use the auto file nameing. Rather, you include the [drive, path, file name] of each brw file (if existing files are borrower files) in the first column of data, and the data you wish to import in the subsequent columns. The most reliable way that I have found to populate that 1st column is to produce a Point Report listing the file name (field 1) and saving the report as an excel file. Then build the path in column 2 with the concatenate formula.
e.g. =concatenate("c:\ pntdata\borrower\",a1,".brw")
copy this formula down column b next to your file names

Then insert a new a1 column and copy the "values" from column b to the new column a

delete the column with the concatenate formulas (now column c)

add data to be imported into subsequent columns and save as a csv folder (c:\ importfile.csv)

build an Import template with existing files block checked, make sure to check <custom ascii format> and [advanced] block and place a comma in the field separator and quote mark in the text qualifier. Put the name of the data file (c:\ importfile.csv) in the Import Data File window. map the fields, hit the batch import, and your done.


Edited by: calyxez2 at: 10/10/03 2:48 pm
 
Tanessa
Unregistered User
(9/29/03 7:47 am)
Reply   Batch import to existing files solution
--------------------------------------------------------------------------------
 Thank you so much for your help!!! I followed your instructions and it worked beautifully, and took MUCH less time than it would have taken us to update the files manually in our "spare" time!  

***************************************************************** */
?>












<!DOCTYPE html PUBLIC "-//W3//DTD XHTML 1.0 Transitional//EN"
"http://www.w3.org/TR/2000/REC-xhtml1-20000126/DTD/xhtml1-transitional.dtd">
<html xlns="http://www.w3.org.1999.xhtml">
<head>
<title>ApplicantUpdate form handler</title>
<script language='Javascript' type="text/javascript">
function Validate()
{
	if(document.ExportName.TheFile.value != "")
 	{
		if(document.ExportName.TheFile.value.indexOf(".txt") == -1)
		{
			alert('appending \".txt\" to file name');
			document.ExportName.TheFile.value = document.ExportName.TheFile.value + ".txt";
		}
	}

	return(true);
}
</script>

<script language="VBScript">
function PointImport()  ' activate the named application
Dim shell

' only import if auto-naming desired. Point files will be manually imported if they are named by the user
' notice that in VB script the equals test uses a single equal sign, and a 'then'

if (document.ExportName.TheFile.value = "") then
	Set shell = CreateObject("WScript.Shell")
	shell.Run """C:\winpoint\import.exe"" c:\appmst.txt c:\appmst.imp c:\pntdata\borrower"
end if

end function

function DeleteTempfile()
dim filesysdelfile

Set filesysdelfile = CreateObject("Scripting.FileSystemObject")
filesysdelfile.DeleteFile "c:\appmst.txt",True
Set filesysdelfile = Nothing
end function
</script>
</head>
<body>

 <?php


// -------------------------------------------------------------------------------------------------//
//																									//
//	ApplicantUpdate.php: This page is called by the ApplicantMaintenace page to perform the actual	//
//	database Insert, Update, and Delete query functions. 											//
//																									//
// -------------------------------------------------------------------------------------------------//


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	Export a record in the table																				//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//


function ExportRecord($DBname, $TableName, $Link, $Array, $Co)
{
	if ($Co == 'y')
		$Query = "SELECT * from $TableName where SSN=".$Array[Co_SSN];
	else
		$Query = "SELECT * from $TableName where SSN=".$Array[SSN];

	$Result=mysql_db_query($DBname, $Query, $Link);

	if (!$Result)
	{
		print("SSN=$Array[SSN]\n");
		die("Line ".__LINE__." The query--".$Query."--was bad!<br>\n".mysql_errno().": ".mysql_error()."\n");
	}

	//print ("Exporting fields from $TableName<br>\n");

	$Row=mysql_fetch_array($Result);

	if ($Co == 'y')
	{
			$Array[Co_Employer]			= $Row[Employer];
			$Array[Co_Position]			= $Row[Position];
			$Array[Co_MonthlyIncome]	= $Row[MonthlyIncome];
			//print ("Co_Employer = $Array[Co_Employer], Co_Position = $Array[Co_Position], Co_MonthlyIncome = ");
			//print ("$Array[Co_MonthlyIncome]<br>\n");
	}
	else
	{
		switch ($TableName)
		{
			case 'ApplicantInfo':
				$Array[SSN]						= $Row[SSN];
				$Array[ApplicantName]			= $Row[ApplicantName];
				$Array[ApplicantFirstName]		= $Row[ApplicantFirstName];
				$Array[ApplicantLastName]		= $Row[ApplicantLastName];
				$Array[DOB]						= $Row[DOB];

				if ($Row[Co_SSN] != 0)
					$Array[Co_SSN]				= $Row[Co_SSN];
				else
					$Array[Co_SSN]				= "";

				$Array[Co_ApplicantName]		= $Row[Co_ApplicantName];
				$Array[Co_ApplicantFirstName]	= $Row[Co_ApplicantFirstName];
				$Array[Co_ApplicantLastName]	= $Row[Co_ApplicantLastName];
				$Array[Co_DOB]					= $Row[Co_DOB];


				if ($Array[Co_SSN] != 0)
					$Array = ExportRecord($DBname, "EmploymentInfo", $Link, $Array, "y"); // nested call here...

				//print ("SSN = $Array[SSN], ApplicantName = $Array[ApplicantName], DOB = $Array[DOB], Co_SSN = ");
				//print ("$Array[Co_SSN], Co_ApplicantName = $Array[Co_ApplicantName], Co_DOB = $Array[Co_DOB]<br>\n");
				break;

			case 'ContactInfo':
				$Array[Street]			= $Row[Street];
				$Array[City]			= $Row[City];
				$Array[State]			= $Row[State];
				$Array[Zip]				= $Row[Zip];
				$Array[WorkPhone]		= $Row[WorkPhone];
				$Array[HomePhone]		= $Row[HomePhone];
				$Array[email]			= $Row[email];
				//print ("Street = $Array[Street], City = $Array[City], State = $Array[State], Zip = $Array[Zip], ");
				//print ("WorkPhone = $Array[WorkPhone], HomePhone = $Array[HomePhone], email = $Array[email]<br>\n");
				break;

			case 'EmploymentInfo':
				$Array[Employer]		= $Row[Employer];
				$Array[Position]		= $Row[Position];
				$Array[MonthlyIncome]	= $Row[MonthlyIncome];
				//print ("Employer = $Array[Employer], Position = $Array[Position], MonthlyIncome = ");
				//print ("$Array[MonthlyIncome]<br>\n");
				break;

			case 'LoanInfo':
				$Array[RequestedLoanAmount]	= $Row[RequestedLoanAmount];
				$Array[LoanPurpose]			= $Row[LoanPurpose];
				$Array[PurchasePrice]		= $Row[PurchasePrice];
				$Array[MonthlyPaymentOn1st]	= $Row[MonthlyPaymentOn1st];
				$Array[MonthlyPaymentOn2nd]	= $Row[MonthlyPaymentOn2nd];

				//print ("RequestedLoanAmount = $Array[RequestedLoanAmount], LoanPurpose = $Array[LoanPurpose], ");
				//print ("PurchasePrice = $Array[PurchasePrice], MonthlyPaymentOn1st = $Array[MonthlyPaymentOn1st], ");
				//print ("MonthlyPaymentOn2nd	= $Array[MonthlyPaymentOn2nd]<br>\n");
				break;
		}
	}

	return ($Array);
}




// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//

function FormatDate($DOB)
{
	// -*-*-*-*- Create Applicant Age fields -*-*-*-*-*-*-


	// fist check for needing to add leading zeros

	if (strlen($DOB) < 8)
	{
		while (strlen($DOB) < 8)
		{
			$xxx = "0".$DOB;
			$DOB = $xxx;
		}
	}


	/* now Format */

	$xxx = substr($DOB,0,2).'/'.substr($DOB,2,2).'/'.substr($DOB,4,4);
	$DOB = $xxx;

	return ($DOB);
}

function ComputeAge($DOB)
{
	$DOB_MM = substr($DOB,0,2);
	$DOB_DD = substr($DOB,2,2);
	$DOB_YYYY = substr($DOB,4,4);


	$MM = date('m');
	$YYYY = date ('Y');

	$Age = $YYYY - $DOB_YYYY;

	if ($MM < $DOB_MM)
		$Age = $Age - 1;

	return ($Age);
}



	// -*-*-*-*- Format the SSN -*-*-*-*-*-*-
function FormatSSN($SSN)
{
	//print ("length is ".strlen($SSN).", value is $SSN<br>\n");

	$x = strlen($SSN);

	while ($x < 9)  // pad with leading zeros
	{
		$SSNxx = "0".$SSN;
		$SSN = $SSNxx;
		$x = strlen($SSN);
		//print ("SSN $SSN<br>\n");
	}

	if ($SSN > 0)
	{
		$SSNxx= substr($SSN,0,3).'-'.substr($SSN,3,2).'-'.substr($SSN,5,4);
		$SSN=$SSNxx;
	}

	return ($SSN);
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	WriteDelimitedFile: Actually, this function creates a form and lists every field being passed to			//
//	the page that does the actual exporting of the data file.													//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//

function WriteDelimitedFile ($PassedArray)
{
	GLOBAL $ApplicantName;
	GLOBAL $ApplicantFirstName;
	GLOBAL $ApplicantMiddleName;
	GLOBAL $ApplicantLastName;
	GLOBAL $ApplicantSuffix;
	
	GLOBAL $Co_ApplicantName;
	GLOBAL $Co_ApplicantFirstName;
	GLOBAL $Co_ApplicantMiddleName;
	GLOBAL $Co_ApplicantLastName;
	GLOBAL $Co_ApplicantSuffix;
	
	$SSN 					= $PassedArray[SSN];
	//$ApplicantName 			= $PassedArray[ApplicantName];

	$DOB 					= $PassedArray[DOB];
	$Age 					= $PassedArray[Age];

	$Co_SSN 				= $PassedArray[Co_SSN];
	//$Co_ApplicantName 		= $PassedArray[Co_ApplicantName];

	$Co_DOB 				= $PassedArray[Co_DOB];
	$Co_Age 				= $PassedArray[Co_Age];

	$Street 				= $PassedArray[Street];
	$City 					= $PassedArray[City];
	$State 					= $PassedArray[State];
	$Zip 					= $PassedArray[Zip];
	$WorkPhone 				= $PassedArray[WorkPhone];
	$HomePhone 				= $PassedArray[HomePhone];
	$email 					= $PassedArray[email];

	$Employer 				= $PassedArray[Employer];
	$Position 				= $PassedArray[Position];
	$MonthlyIncome 			= $PassedArray[MonthlyIncome];

	$Co_Employer 			= $PassedArray[Co_Employer];
	$Co_Position 			= $PassedArray[Co_Position];
	$Co_MonthlyIncome 		= $PassedArray[Co_MonthlyIncome];

	$RequestedLoanAmount 	= $PassedArray[RequestedLoanAmount];
	$LoanPurpose 			= $PassedArray[LoanPurpose];
	$PurchasePrice 			= $PassedArray[PurchasePrice];
	$MonthlyPaymentOn1st 	= $PassedArray[MonthlyPaymentOn1st];
	$MonthlyPaymentOn2nd 	= $PassedArray[MonthlyPaymentOn2nd];



	// -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-
	// -*-*-*-*- Separate the first/middle name from the last name for applicant -*-*-*-*-*-*-

	//print ("WriteDelimitedFile (".__LINE__.") \$ApplicantName $ApplicantName<br>\n");
	FormatNames();
	
	//print ("WriteDelimitedFile (".__LINE__.") ApplicantFirstName |$ApplicantFirstName| ApplicantMiddleName |$ApplicantMiddleName| ApplicantLastName |$ApplicantLastName| ApplicantSuffix |$ApplicantSuffix|<br>\n");

	// neat way to printout the arrays keys and their values
	
	$n = count($PassedArray);
	//print ("Line ".__LINE__." PassedArray: $n parameters in array.<br>\n");
	/*
	for ($n=0; $n < count($PassedArray); $n++)
	{
		$Parameter= each($PassedArray);
		print ("WriteDelimitedFile ".__LINE__." PassedArray $Parameter[key] = $Parameter[value]<p>\n");
	}
	*/
			
	// -*-*-*-*- Create Applicant Age fields -*-*-*-*-*-*-


	// fist check for needing to add leading zero

	if (strlen($_POST[DOB]) == 7)
	{
		$DOB = "0".$_POST[DOB];

	}
	else
	{
		$DOB = $_POST[DOB];
	}

	/* Format the $DOB */

	if (strlen($DOB) > 0)
	{
		//print("\$DOB $DOB<br>\n");
		$xxx = substr($DOB,0,2).'/'.substr($DOB,3,2).'/'.substr($DOB,6,4);
		$DOB_MM = substr($DOB,0,2);
		$DOB_DD = substr($DOB,3,2);
		$DOB_YYYY = substr($DOB,6,4);
		$DOB = $xxx;

		$MM = date('m');
		$YYYY = date ('Y');

		$Age = $YYYY - $DOB_YYYY;

		if ($MM < $DOB_MM)
			$Age = $Age - 1;
	}


	// -*-*-*-*- Create Co_Applicant Age fields -*-*-*-*-*-*-


	// fist check for needing to add leading zero

	if (strlen($_POST[Co_DOB]) == 7)
	{
		$Co_DOB = "0".$_POST[Co_DOB];

	}
	else
	{
		$Co_DOB = $_POST[Co_DOB];
	}

	/* Format the $Co_DOB */

	if (strlen($Co_DOB) > 0)
	{
		$xxx = substr($Co_DOB,0,2).'/'.substr($Co_DOB,3,2).'/'.substr($Co_DOB,6,4);
		$Co_DOB_MM = substr($Co_DOB,0,2);
		$Co_DOB_DD = substr($Co_DOB,3,2);
		$Co_DOB_YYYY = substr($Co_DOB,6,4);
		$Co_DOB = $xxx;

		$MM = date('m');
		$YY = date ('Y');

		$Co_Age = $YYYY - $Co_DOB_YYYY;

		if ($MM < $Co_DOB_MM)
			$Co_Age = $Co_Age - 1;
	}

	//print ("ApplicantFirstName |$ApplicantFirstName| ApplicantMiddleName |$ApplicantMiddleName| ApplicantLastName |$ApplicantLastName| ApplicantSuffix |$ApplicantSuffix|");
	//print ("Co_DOB	Co_Age	Street	City	State	Zip	WorkPhone	HomePhone	email	Employer	");
	//print ("Position	MonthlyIncome	MonthlyPaymentOn1st	MonthlyPaymentOn2nd	");
	//print ("Co_Employer	Co_Position	Co_MonthlyIncome	RequestedLoanAmount	LoanPurpose	PurchasePrice<br>\n");

	//print ("$Co_DOB	$Co_Age	$Street	$City	$State	$Zip	$WorkPhone	");
	//print ("$HomePhone	$email	$Employer	$Position	$MonthlyIncome	");
	//print ("$MonthlyPaymentOn1st	$MonthlyPaymentOn2nd	$Co_Employer	");
	//print ("$Co_Position	$Co_MonthlyIncome	$RequestedLoanAmount	$LoanPurpose	");
	//print ("$PurchasePrice<br>\n");	
	//die ("\$DOB $DOB \$Co_DOB $Co_DOB \$Age $Age \$Co_Age $Co_Age");

	// -*-*-*-*-*-*-*-*-*-*-*-*-*-* now write the file to the server drive -*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-*-

	//print ("Line ".__LINE__." just before write SSN $SSN Co_SSN $Co_SSN<br>\n");

	$FileName = "appmst.txt"; //must set permissions of file to 666
	$TheFile = $FileName;
	$Open = fopen($TheFile, "w+");


	if ($Open)
	{
		fwrite($Open, "SSN	ApplicantFirstName	ApplicantMiddleName	ApplicantLastName	ApplicantSuffix	DOB	Age	Co_SSN	Co_ApplicantFirstName	");
		fwrite($Open, "Co_ApplicantMiddleName	Co_ApplicantLastName	Co_ApplicantSuffix	");
		fwrite($Open, "Co_DOB	Co_Age	Street	City	State	Zip	WorkPhone	HomePhone	email	Employer	");
		fwrite($Open, "Position	MonthlyIncome	MonthlyPaymentOn1st	MonthlyPaymentOn2nd	");
		fwrite($Open, "Co_Employer	Co_Position	Co_MonthlyIncome	RequestedLoanAmount	LoanPurpose	PurchasePrice\n");

		fwrite($Open, "$SSN	$ApplicantFirstName	$ApplicantMiddleName	$ApplicantLastName	$ApplicantSuffix	$DOB	$Age	$Co_SSN	");
		fwrite($Open, "$Co_ApplicantFirstName	$Co_ApplicantMiddleName	$Co_ApplicantLastName	$Co_ApplicantSuffix	");
		fwrite($Open, "$Co_DOB	$Co_Age	$Street	$City	$State	$Zip	$WorkPhone	");
		fwrite($Open, "$HomePhone	$email	$Employer	$Position	$MonthlyIncome	");
		fwrite($Open, "$MonthlyPaymentOn1st	$MonthlyPaymentOn2nd	$Co_Employer	");
		fwrite($Open, "$Co_Position	$Co_MonthlyIncome	$RequestedLoanAmount	$LoanPurpose	");
		fwrite($Open, "$PurchasePrice\n");

		fclose($Open);

		//print ("File exported to $TheFile on server<br>\n");
		//print ("\nWhen download is complete, press back arrow twice to continue exporting files, else close browser window<br>\n");

	}
	else
	{
		print ("Export failed!<br>\n");

	}
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	OldWriteDelimitedFile: Actually, this function creates a form and lists every field being passed to			//
//	the page that does the acxtual exporting of the data file.													//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//

function OldWriteDelimitedFile ($PassedArray)
{

	print ("<br><center><H1><strong>Applicant Data Export</strong></H1><br>\n");
	print ("Export of data for applicant $PassedArray[ApplicantName]<br>\n");

	print ("<form name=ExportFileName action='ExportFile.php' onsubmit='return(Validate());' method='get'><br>\n");
	print ("File number with .txt extension<br>\n");
	print ("<input type='text' name='FileName'><br>\n");

	print ("<input type='hidden' name='SSN' value='$PassedArray[SSN]'>");
	print ("<input type='hidden' name='ApplicantName' value='$PassedArray[ApplicantName]'>");
	print ("<input type='hidden' name='DOB' value='$PassedArray[DOB]'>");

	print ("<input type='hidden' name='Co_SSN' value='$PassedArray[Co_SSN]'>");
	print ("<input type='hidden' name='Co_ApplicantName' value='$PassedArray[Co_ApplicantName]'>");
	print ("<input type='hidden' name='Co_DOB' value='$PassedArray[Co_DOB]'>");

	print ("<input type='hidden' name='Street' value='$PassedArray[Street]'>");
	print ("<input type='hidden' name='City' value='$PassedArray[City]'>");
	print ("<input type='hidden' name='State' value='$PassedArray[State]'>");
	print ("<input type='hidden' name='Zip' value='$PassedArray[Zip]'>");
	print ("<input type='hidden' name='WorkPhone' value='$PassedArray[WorkPhone]'>");
	print ("<input type='hidden' name='HomePhone' value='$PassedArray[HomePhone]'>");
	print ("<input type='hidden' name='email' value='$PassedArray[email]'>");

	print ("<input type='hidden' name='Employer' value='$PassedArray[Employer]'>");
	print ("<input type='hidden' name='Position' value='$PassedArray[Position]'>");
	print ("<input type='hidden' name='MonthlyIncome' value='$PassedArray[MonthlyIncome]'>");

	print ("<input type='hidden' name='Co_Employer' value='$PassedArray[Co_Employer]'>");
	print ("<input type='hidden' name='Co_Position' value='$PassedArray[Co_Position]'>");
	print ("<input type='hidden' name='Co_MonthlyIncome' value='$PassedArray[Co_MonthlyIncome]'>");

	print ("<input type='hidden' name='RequestedLoanAmount' value='$PassedArray[RequestedLoanAmount]'>");
	print ("<input type='hidden' name='LoanPurpose' value='$PassedArray[LoanPurpose]'>");
	print ("<input type='hidden' name='PurchasePrice' value='$PassedArray[PurchasePrice]'>");
	print ("<input type='hidden' name='MonthlyPaymentOn1st' value='$PassedArray[MonthlyPaymentOn1st]'>");
	print ("<input type='hidden' name='MonthlyPaymentOn2nd' value='$PassedArray[MonthlyPaymentOn2nd]'>");

	print ("<input type='submit' value='Continue'>&nbsp;&nbsp;");
	print ("<input type='reset' value='Cancel' onClick='location.href=\"ApplicantList.php\"'></center>");
	print ("</form>");
}



// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	Delete a record in the table, then take the user to the ApplicantList.php page with the saved list filter.	//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//


function DeleteRecord($DBname, $TableName, $Link, $SSN, $SavedLoanStatus)
{

	if($TableName == "Users")
		$Query = "SELECT * from $TableName where Password='$SSN'";
	else
		$Query = "SELECT * from $TableName where SSN='$SSN'";


	$Result=mysql_db_query($DBname, $Query, $Link);

	if ($Result)
	{
		/* print("The query \"$Query\" was successfully executed!<br>\n");*/

		if (mysql_fetch_array($Result)) /* Did we obtain an existing table entry? */
		{
			if($TableName == "Users")
				$Query = "DELETE from $TableName where Password=$SSN limit 1";
			else
				$Query = "DELETE from $TableName where SSN=$SSN limit 1";

			$Result=mysql_db_query($DBname, $Query, $Link);

			if (!mysql_db_query ($DBname, $Query, $Link))
			{
				die("The query--".$Query."--was bad!<br>\n".mysql_errno().": ".mysql_error()."\n");
			}
			else
			{
				/* print("The query \"$Query\" was successfully executed!<br>\n"); */
			}
		}
		else
		{
			print("Match for borrower with Social Security Number |$SSN| in TableName '$TableName' was NOT found<br>\n");
		}
	}
	else
	{
		die("The query--".$Query."--was bad!<br>\n".mysql_errno().": ".mysql_error()."\n");
	}
}

// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	Update a record in the table, then take the user to the ApplicantList.php page with the saved list filter.	//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//

function UpdateRecord($DBname, $TableName, $Link, $SSN, $ApplicantName, $ApplicantFirstName, $ApplicantLastName, $DOB,
					$Co_SSN, $Co_ApplicantName, $Co_ApplicantFirstName, $Co_ApplicantLastName, $Co_DOB, $HowReferred,
					$LoanStatus, $DateInserted, $SavedFilter)
{
	list($month, $day, $year) = sscanf($DateInserted, "%02d/%02d/%02d");// reformat MM/DD/YY date
	$DateInserted = sprintf("%02d/%02d/%02d", $year, $month, $day);			// to YY/MM/DD

   	$Query = "UPDATE $TableName SET
  	    ApplicantName='$ApplicantName', ApplicantFirstName='$ApplicantFirstName', ApplicantLastName='$ApplicantLastName', DOB='$DOB',
  	    Co_SSN='$Co_SSN', Co_ApplicantName='$Co_ApplicantName', Co_ApplicantFirstName='$Co_ApplicantFirstName',
  	    Co_ApplicantLastName='$Co_ApplicantLastName', Co_DOB='$Co_DOB', HowReferred='$HowReferred',
  	    LoanStatus='$LoanStatus', DateInserted='$DateInserted' WHERE SSN='$SSN'";

	mysql_select_db($DBname,$Link); // execute the DBMS request

	/* mysql_query() returns TRUE on success and FALSE on error */

	if (!mysql_query ($Query, $Link))
	{
		die("ApplicantUpdate (".__LINE__.") The query was:<br>$Query<br>\nApplicant could not be updated in the database! Possible duplicate SS#<br>\n");	
	}
	else
	{
		mysql_close($Link);

		//print ("Line ".__LINE__." SavedFilter =|$SavedFilter|<br>\n");
   	    //die ("Line ".__LINE__." UpdateRecord: Query was: $Query<br>\n");

		print ("<script>window.location=\"ApplicantList.php\";</script>\n");
	}
}


// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//
//																												//
//	Insert a record in the table, then take the user to the ApplicantMaintenance.php page to continue adding.	//
//																												//
// - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -//

function InsertRecord($DBname, $TableName, $Link, $SSN, $ApplicantName, $ApplicantFirstName, $ApplicantLastName, $DOB,
					$Co_SSN, $Co_ApplicantName, $Co_ApplicantFirstName, $Co_ApplicantLastName, $Co_DOB, $HowReferred,
					$LoanStatus, $DateInserted, $SavedLoanStatus)
{
	//$DateInserted = date ("m/d/y");
	list($month, $day, $year) = sscanf($DateInserted, "%02d/%02d/%02d");// reformat MM/DD/YY date
	$DateInserted = sprintf("%02d/%02d/%02d", $year, $month, $day);			// to YY/MM/DD

   	$Query = "INSERT into $TableName values
    ('$SSN',    '$ApplicantName', '$ApplicantFirstName', '$ApplicantLastName', '$DOB', '$Co_SSN', '$Co_ApplicantName',
    	'$Co_ApplicantFirstName', '$Co_ApplicantLastName', '$Co_DOB', '$HowReferred', '$LoanStatus', '$DateInserted')";
	/*
    print("ApplicantUpdate (".__LINE__." Query is: $Query<br>\n");
	*/
	mysql_select_db($DBname,$Link); // execute the DBMS request


	if ($SSN=="")
	{
		$SSN="Blank";
	}

	/* mysql_query() returns TRUE on success and FALSE on failure */

	if (!mysql_query ($Query, $Link))
	{
		mysql_close($Link);


		print ("<br><center><font face='Verdana' size='5' color='#000099'><strong>Warning!</strong></font><br><br>");
		print ("<font face='Verdana' size='2' color='#000099'>Applicant Information not added.<br><br>\n");
		print ("Social Security Number  <font face='Verdana' size='3' color='#000099'>'$SSN' </font>");
		print ("<font face='Verdana' size='2' color='#000099'>is a possible duplicate Social Security Number.</font><br>\n");

		/* Pass the List filter, $SavedLoanStatus back to the ApplicantList.php page	*/

		print("<form action='https://host373.ipowerweb.com/~lightnin/LAPS/ApplicantList.php'>\n");


		print("SavedFilter=|$SavedLoanStatus|<br><br>\n");

		print("<input type='hidden' name='SavedFilter' value=$SavedLoanStatus' method='get'>");
		print("<input type='button' value='Review Applicant Record' onClick='location.href=\"ApplicantList.php\"'>&nbsp;&nbsp;");
		print("<input type='submit' value='Browse All Applicants'><br></center>");
		print("</form>\n");
		print("<br><br>ApplicantUpdate (".__LINE__." Query is: $Query<br>\n");
	}
	else
	{
		mysql_close($Link);

		/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
		/*																										*/
		/*	If the Query was performed okay, go to adding more records using ApplicantMaintenance.php page, 	*/
		/*	Be sure to send null variables, except for RequestType (to be used for requesting another Insert)	*/
		/*	and the filter (to be used when returning to ApplicantList.php).									*/
		/*																										*/
		/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

		print ("Insert Complete. Now transfer to a new page<br>\n");
		print ("<script>window.location=\"ApplicantList.php\";</script>\n");



		print("<script>window.location='ApplicantMaintenance.php?SavedFilter=$SavedLoanStatus&RequestType=Insert';</script>\n");

		print ("window.location='ApplicantMaintenance.php?SavedFilter=$SavedLoanStatus&RequestType=Insert'");
	}
}



/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */
/*																												*/
/*	ApplicantUpdate.php: This php page receives and handles the data generated by 'ApplicantMaintenance.php'  	*/
/*	and 'ApplicantList.php.' This page does the actual database queries based on the request type that was 		*/
/*	passed.																										*/
/*																												*/
/*	The values passed to this page should be: SavedLoanStatus, $RequestType, $ApplicantName, $DOB, $SSN,		*/
/*	$Co_ApplicantName, $Co_DOB, $Co_SSN																			*/
/*																												*/
/*	This page calls ApplicantList.php and passes $SavedFilter													*/
/*	This page also calls ApplicantMaintenance.php and passes $SavedLoanFilter									*/
/*																												*/
/*	Sample URL:																									*/
/*																												*/
/*	http://www.lightning-mortgage.com/ApplicantUpdate.php?RequestType=Update&SavedLoanStatus=Active				*/
/*	&ApplicantName=John+Consumer&DOB=11%2F11%2F11&SSN=777-44-1111&Co_ApplicantName=Jane+Consumer				*/
/*	&Co_DOB=10%2F10%2F10&Co_SSN=333-66-9999&HowReferred=Newspaper+Ad&LoanStatus=Active&Update=Update+Record		*/
/*																												*/
/*- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - */

	/* variables to access Database */

	//print ("Received SavedLoanStatus=|$SavedLoanStatus|<br>\n");
	//print ("Received LoanStatus=|$LoanStatus|<br><br>\n");


	$Host="localhost";
	//$User="lightnin_Tony";
	//$Password="ipowerwe";
	$DBname="lightnin_LoanApps";
	$TableName="ApplicantInfo";

/*	First connect to the MySQL DBMS on this server */

	$Link=mysql_connect ($Host, $User, $Password) or die ('I cannot connect to the DBMS because: '.mysql_error());

	$ApplicantSuffix="";
	$Co_ApplicantSuffix="";
	$ApplicantMiddleName="";
	$Co_ApplicantMiddleName="";
	
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
/*																		*/
/*	Next, Clean up the data before putting it in the database			*/
/*	Remove any non-digit from the social security numbers  and dates.	*/
/*																		*/
/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

	/* before storing these values, remove the formatting (non-digit) characters */

	$SSN    = ereg_replace("[^[:digit:]]", "", $SSN);
    $Co_SSN = ereg_replace("[^[:digit:]]", "", $Co_SSN);
    $DOB	= ereg_replace("[^[:digit:]]", "", $DOB);
	$Co_DOB	= ereg_replace("[^[:digit:]]", "", $Co_DOB);
	
	//print ("Line ".__LINE__." just received SSN $SSN Co_SSN $Co_SSN<br>\n");

/*
	print ("At Start of ApplicantUpdate--- |".$SSN."|\n");
	print ("At Start---Co_SSN: |".$Co_SSN."|<BR>\n");
	print ("At Start---RequestType |".$RequestType."|<BR>\n");
*/

	/* remove leading and trailing spaces, if any */

	$ApplicantName = trim ($ApplicantName);
	$SSN = trim ($SSN);
	$DOB = trim ($DOB);
	$Co_ApplicantName = trim ($Co_ApplicantName);
	$Co_SSN = trim ($Co_SSN);
	$Co_DOB = trim ($Co_DOB);
	$HowReferred = trim ($HowReferred);
	$LoanStatus = trim ($LoanStatus);

	/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
	/*																				*/
	/*	Remove double quotes. The ereg_replace uses "Regular Expression" syntax. 	*/
	/*	The backslash character (known as the Escape charater) negates the special 	*/
	/*	meaning of the following character, which in this case is a double quote,	*/
	/*	so the pattern "\"\"" is really two side-by-side double quote characters,	*/
	/*	signa=ifying an empty string that may have been erroneously passed in one	*/
	/*	of the parameters when this page was called.								*/
	/*																				*/
	/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/


	// neat way to printout the arrays keys and their values
/*
	$n = count($_POST);
	print ("Line ".__LINE__." POST: $n parameters received.<br>\n");

	for ($n=0; $n < count($_POST); $n++)
	{
		$Parameter= each($_POST);
		print ("Line ".__LINE__." Posted $Parameter[key] = $Parameter[value]<p>\n");
	}

	die ("Line ".__LINE__." SavedFilter =|$SavedFilter|<br>\n");
*/
	$Pattern = "\"\"";  /* this is the pattern "", which will be replaced by an empty string */

	$SSN              = ereg_replace($Pattern, "", $SSN);
    $Co_SSN           = ereg_replace($Pattern, "", $Co_SSN);
     
    $SaveA = $ApplicantName    = ereg_replace($Pattern, "", $ApplicantName);
    $DOB              = ereg_replace($Pattern, "", $DOB);

   
	$SaveC = $Co_ApplicantName = ereg_replace($Pattern, "", $Co_ApplicantName);
	$Co_DOB           = ereg_replace($Pattern, "", $Co_DOB);
	$HowReferred	  = ereg_replace($Pattern, "", $HowReferred);
	$LoanStatus       = ereg_replace($Pattern, "", $LoanStatus);


	/* verify the passed parameter values */
/*
	print ("SavedFilter=$SavedFilter<br>\n");
	print ("RequestType=$RequestType<br>\n");
	print ("ApplicantName=$ApplicantName<br>\n");
	print ("DOB=$DOB<br>\n");
	print ("SSN=$SSN<br>\n");
	print ("Co_ApplicantName=$Co_ApplicantName<br>\n");
	print ("Co_DOB=$Co_DOB<br>\n");
	print ("Co_SSN=$Co_SSN<br>\n");
*/


/*	Now the clean up is done. Either insert, delete, or update the table entry depending on the Request Type sent */


	//should be for inserts only--->$DateInserted = date ("m/d/y");
	
	//print ("line (".__LINE__.") ApplicantName=$ApplicantName<br>\n");
	//print ("line (".__LINE__.") Co_ApplicantName=$Co_ApplicantName<br>\n");
	//print ("ApplicantUpdate.php (".__LINE__.") \$ApplicantName $ApplicantName<br>\n");
	FormatNames();	//puts every part of the name in the correct case
/*
	print ("line (".__LINE__.") ApplicantName=$ApplicantName<br>\n");
	print ("line (".__LINE__.") ApplicantFirstName=$ApplicantFirstName<br>\n");
	print ("line (".__LINE__.") ApplicantMiddleName=$ApplicantMiddleName<br>\n");
	print ("line (".__LINE__.") ApplicantLastName=$ApplicantLastName<br>\n");
	print ("line (".__LINE__.") ApplicantSuffix=$ApplicantSuffix<br>\n");
	print ("line (".__LINE__.") Co_ApplicantName=$Co_ApplicantName<br>\n");
	print ("line (".__LINE__.") Co_ApplicantFirstName=$Co_ApplicantFirstName<br>\n");
	print ("line (".__LINE__.") Co_ApplicantMiddleName=$Co_ApplicantMiddleName<br>\n");
	print ("line (".__LINE__.") Co_ApplicantLastName=$Co_ApplicantLastName<br>\n");
	print ("line (".__LINE__.") Co_ApplicantSuffix=$Co_ApplicantSuffix<br>\n");
*/
	$DateInserted = $_POST[DateInserted];
	//die ("\$DateInserted $DateInserted");
	
	switch ($RequestType)
	{
		case "Insert":
			InsertRecord($DBname, $TableName, $Link, $SSN, $ApplicantName,  $ApplicantFirstName, $ApplicantLastName, $DOB,
					$Co_SSN, $Co_ApplicantName, $Co_ApplicantFirstName, $Co_ApplicantLastName, $Co_DOB,$HowReferred,
					$LoanStatus, $DateInserted, $SavedFilter);
			break;

		case "Update":
			UpdateRecord($DBname, $TableName, $Link, $SSN, $ApplicantName, $ApplicantFirstName, $ApplicantLastName, $DOB,
							$Co_SSN, $Co_ApplicantName, $Co_ApplicantFirstName, $Co_ApplicantLastName, $Co_DOB,
							$HowReferred, $LoanStatus, $DateInserted, $SavedFilter);
  			break;


  		case "Delete":

			/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/
			/*																			*/
			/*	Use a form and Yes/No buttons to make the user verify record deletions	*/
			/*	Once deletion is confirmed, pass a special Request Type to a new 		*/
			/*	 instance of thsi page.													*/
			/*																			*/
			/* - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -*/

			print ("<font face='Verdana' color='#000099'><br><center><table width='50%'>");
			print ("<tr><H1><strong>Warning</strong></center></H1></tr><tr><left>Delete confirmation for ");
			print ("Applicant, Contact, Employment, Loan, and Daily Status Information for:</tr><tr>&nbsp;</tr><tr>Applicant Name: $ApplicantName</tr>");
			print ("<tr>&nbsp;</tr><tr>Social Security Number: ");

			/* Format the SSN */

			//print ("length is ".strlen($SSN).", value is $SSN<br>\n");
			$x = strlen($SSN);

			while ($x < 9)  // pad with leading zeros
			{
				$xxx = "0".$SSN;
				$SSN = $xxx;
				$x = strlen($SSN);
				//print ("length is ".strlen($SSN).", value is $SSN<br>\n");
			}

			if (strlen($SSN) > 0)
			{
				$xxx= substr($SSN,0,3).'-'.substr($SSN,3,2).'-'.substr($SSN,5,4);
				$SSN=$xxx;
			}

			print ("$SSN</tr><tr>&nbsp;</tr>");
			print ("<tr><form action='https://host373.ipowerweb.com/~lightnin/LAPS/ApplicantUpdate.php' method='get'></tr>");
			print ("<tr><input type='submit' value='Yes'>&nbsp;&nbsp;");
			print ("<input type='button' value='No' onClick='location.href=\"ApplicantList.php\"'></tr>");
			print ("<input type='hidden' name='SSN' value=$SSN>");
			print ("<input type='hidden' name='RequestType' value='ConfirmedDelete'>");
			print ("</left></form></table>");
			break;

		case "ConfirmedDelete":
			DeleteRecord($DBname, $TableName,       	$Link, $SSN, $SavedLoanStatus);
			DeleteRecord($DBname, "ContactInfo",    	$Link, $SSN, $SavedLoanStatus);
			DeleteRecord($DBname, "EmploymentInfo", 	$Link, $SSN, $SavedLoanStatus);
			DeleteRecord($DBname, "WorkingStatusInfo",	$Link, $SSN, $SavedLoanStatus);
			DeleteRecord($DBname, "LoanInfo",			$Link, $SSN, $SavedLoanStatus);
			DeleteRecord($DBname, "Users",				$Link, $SSN, $SavedLoanStatus);

			if (Co_SSN > 0)
			{
				DeleteRecord($DBname, "EmploymentInfo", $Link, $Co_SSN, $SavedLoanStatus);
			}

			mysql_close($Link);

			/*	Call the ApplicantList.php page for further table (Add, change, delete) processing. */
			/* Pass the List filter, $SavedLoanStatus												*/
			print ("<script>window.location='https://host373.ipowerweb.com/~lightnin/LAPS/ApplicantList.php'</script>\n");

			/* die ("deleting $SSN"); */
		  	break;

		case "Export":
			$Array[SSN] = $SSN;
			$Array = ExportRecord($DBname, $TableName,       $Link, $Array, 'n');
			$Array = ExportRecord($DBname, "ContactInfo",    $Link, $Array, 'n');
			$Array = ExportRecord($DBname, "EmploymentInfo", $Link, $Array, 'n');
			$Array = ExportRecord($DBname, "LoanInfo",	$Link, $Array, 'n');
			$Array[Age] 	= ComputeAge($Array[DOB]);
			$Array[Co_Age]	= ComputeAge($Array[Co_DOB]);
			$Array[DOB] 	= FormatDate($Array[DOB]);
			$Array[Co_DOB] 	= FormatDate($Array[Co_DOB]);
			$Array[SSN] 	= FormatSSN($Array[SSN]);
			if ($Array[Co_SSN] != 0)
				$Array[Co_SSN] 	= FormatSSN($Array[Co_SSN]);
			else
			{
				$Array[Co_SSN] = "";
				$Array[Co_DOB] = "";
				$Array[Co_Age] = "";
			}
			
			$ApplicantName = $SaveA;
			$Co_ApplicantName = $SaveC;
			$Worked = WriteDelimitedFile ($Array);


			// *-*-*-*-*-*-*-*-*-*-*-*-*-*-* Display downloading instructions on this page *-*-*-*-*-*-*-*-*-*-*-*-*

			//print ("Line ".__LINE__." just passed SSN $Array[SSN] Co_SSN $Array[Co_SSN]<br>\n");
			print ("<font face='Verdana' color='#000099'><br><center><table width='90%'>");
			print ("<tr><H3><strong>Point File Import Instructions:</strong></center></H3></tr>");
			print ("<tr>If auto-naming of Point files is turned on, you can leave the \"File Name\" empty and ");
			print ("choose \"Download File\" to download the exported borrower file to the default temporary file, ");
			print ("called c:\appmst.txt. It will replace the last temporary file, ");
			print ("if any existed. The loan file will then be imported into Point.<tr>");


			print("<tr>&nbsp;</tr><tr>If auto-naming is not turned on, or if you want to manually import the file, ");
			print("fill in a file name before pressing </tr><tr>\"Download File.\" You should download the file to the ");
			print("c:\pnttempl\dataimp directory.</tr><tr>&nbsp;</tr>");
			print("<tr>The filename will be given a .txt extension, so do not add the filename extension. </tr>");
			print("<tr>&nbsp;</tr><tr>Leave field blank if you auto-name Point files</tr>");
			print("<form name='ExportName' onsubmit='Validate();' action='CopyToLocalFile.php' method='put'>");
			print("<tr>File Name <input name='TheFile' type='text'>");

			print("<tr>&nbsp;</tr><tr><input name='submit'  type='submit' value='Download File'></tr>");
			print("</form>");

			print("<tr>&nbsp;</tr><tr>To complete the import process manually, go into Point, open the custom Borrower or Prospect file, ");
			print("and then choose \"File | Import From...| Other App (using import template)\"</tr>");
			print("<tr>Choose the \"appmst.imp\" template, Then choose the just exported .txt file </tr>");

			print("<tr>&nbsp;</tr><tr>The next time you launch Point, choose the appropriate \"Rebuild List\" (Borrower or Prospect).</tr>");
			print("<tr>&nbsp;</tr><tr>The newly imported loan will then appear.</tr>");

			print("<form action='https://host373.ipowerweb.com/~lightnin/LAPS/ApplicantList.php' onSubmit='PointImport()' method='put'>");
			print("<tr>&nbsp;</tr><tr>After you have exported file and it is saved to your local drive, press \"Continue.\"</tr>");
			print("<tr>&nbsp;</tr><tr><input name='submit' type='submit' value='Continue'></tr>");

			print("</form></table>");

			// *-*-*-*-*-*-*-*-*-*-*-*-*-*-* Now force a file download on the next page *-*-*-*-*-*-*-*-*-*-*-*-*

			//print("<script language='VBscript'>DeleteTempfile();</script>");
			//print("<script>window.location='CopyToLocalFile.php?FileName=$TheFile';</script>\n"); // copy file
			//print("After window.open\n");
			break;

		default:
		  	die("Request is not an Export, Insert, Delete, or Update. It is a '".$RequestType."' for SSN '".$SSN."'\n");
			break;
	}
?>

</body>
</html>